{"version":3,"sources":["components/Movie.js","components/Winner.js","components/Loser.js","components/App.js","serviceWorker.js","index.js"],"names":["Movie","props","movies","length","className","to","i","imdbRating","o","style","src","Poster","alt","Title","Year","Winner","history","useHistory","match","params","movie","target","rel","href","imdbID","onClick","push","window","location","reload","Loser","App","state","fetch","then","res","json","data","setState","this","fetchingRandomMovie","path","render","React","Component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.779a4da5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Movie = props => {\n\n    if(!props.movies || props.movies.length <2 ) {\n      return (\n      <div className=\"lds-spinner\">\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div>\n        <div></div><div></div><div></div><div></div><div></div>\n      </div>\n      );\n    }\n    \n    return (\n        <Link to={props.movies[props.i].imdbRating < props.movies[props.o].imdbRating ? `/winner/${props.i}` : `/loser/${props.i}`}> \n      <div className=\"card mh-30\" style={{\"width\": \"18rem\"}}>\n        <img className=\"card-img-top\" src={props.movies[props.i].Poster} alt={props.movies[props.i].Title} />\n        <div className=\"card-body d-flex flex-column align-items-center flex-wrap\">\n          <h5 className=\"card-title\">{props.movies[props.i].Title}</h5>\n          <p className=\"card-text\">{props.movies[props.i].Year}</p>\n        </div>\n      </div>\n      </Link>\n    );\n}\n\nexport default Movie;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Winner = props => {\n  let history = useHistory();\n\n  function handleClick() {\n    history.push(\"/\");\n    window.location.reload();\n  }\n\n  if(!props.movies || props.movies.length <2 ) {\n    return (\n    <div className=\"lds-spinner\">\n      <div></div><div></div><div></div><div></div><div></div><div></div><div></div>\n      <div></div><div></div><div></div><div></div><div></div>\n    </div>\n    );\n  }\n\n  return (\n    <div className=\"result card text-center\">\n      <div className=\"card-body\">\n        <h1 className=\"winner card-title blink\">Congrats, you guessed right!</h1>\n        <p className=\"card-text\">\"{props.movies[props.match.params.movie].Title}\" has a score of {props.movies[props.match.params.movie].imdbRating}</p>\n        <button className=\"btn btn-warning\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.imdb.com/title/${props.movies[props.match.params.movie].imdbID}/`} > Check out the movie!</a></button>\n        <button className=\"btn btn-warning\" onClick={() => {handleClick()}}>Play Again!</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Winner;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Loser = props => {\n  let history = useHistory();\n\n  function handleClick() {\n    history.push(\"/\");\n    window.location.reload();\n  }\n\n  if(!props.movies || props.movies.length <2 ) {\n    return (\n    <div className=\"lds-spinner\">\n      <div></div><div></div><div></div><div></div><div></div><div></div><div></div>\n      <div></div><div></div><div></div><div></div><div></div>\n    </div>\n    );\n  }\n\n  return (\n    <div className=\"result card text-center\">\n      <div className=\"card-body\">\n        <h1 className=\"loser card-title blink\">LOSER</h1>\n        <p className=\"card-text\">\"{props.movies[props.match.params.movie].Title}\" has a score of {props.movies[props.match.params.movie].imdbRating}</p>\n        <button className=\"btn btn-warning\"><a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.imdb.com/title/${props.movies[props.match.params.movie].imdbID}/`} > Check out the movie!</a></button>\n        <button className=\"btn btn-warning\" onClick={() => {handleClick()}}>Play Again!</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Loser;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport '../styles/App.css';\nimport Movie from './Movie';\nimport Winner from './Winner';\nimport Loser from './Loser';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={}\n  }\n\n  fetchingRandomMovie() {\n    fetch('http://localhost:5000/random-movie')\n    .then(res => res.json())\n    .then(data => {\n     !this.state.movies ? this.setState({movies:[data]}) : this.setState({movies: [...this.state.movies, data]})  \n    });\n  }\n\n  componentDidMount() {\n    this.fetchingRandomMovie();\n    this.fetchingRandomMovie();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n      <div>\n        <Switch>\n          <Route path='/winner/:movie' render={ (props) => (<><Winner {...props} movies={this.state.movies} /></>) } ></Route>\n          <Route path='/loser/:movie' render={ (props) => (<><Loser {...props} movies={this.state.movies} /></>) } ></Route>\n          <Route path='/' render={ (props) => (\n            <>\n              <div className=\"jumbotron jumbotron-fluid mh-10\">\n                <div className=\"container mh-5 d-flex flex-column align-items-center\">\n                  <h1 className=\"display-10\">Which movie is worse?</h1>\n                  <p className=\"lead\">Choose the movie that has lower rating at IMDb</p>\n                </div>\n              </div>\n              <div className=\"d-flex flex-row justify-content-around align-items-center flex-wrap h-100\">\n                <Movie movies={this.state.movies} i={0} o={1} />\n                <Movie movies={this.state.movies} i={1} o={0} />\n              </div>\n            </>) } >\n          </Route>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}